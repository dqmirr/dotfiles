{"clipboardHistory":[{"value":"python -m ensurepip --upgrade","recorded":"2025-09-26 11:54:17.088060726","filePath":"null","pinned":false},{"value":"$ pip install python-telegram-bot --upgrade","recorded":"2025-09-26 11:53:14.338060388","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-09-26 11:51:03.064021300","filePath":"null","pinned":false},{"value":"curl -fsSL https://ollama.com/install.sh | sh","recorded":"2025-09-26 11:47:22.777036174","filePath":"null","pinned":false},{"value":"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINAtZTVClGYnlbf9w2u3zTzGD0fvUkAADTpysrHy9Ltf ketszu@archlinux","recorded":"2025-09-26 11:41:58.281365449","filePath":"null","pinned":false},{"value":"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG5TWgalmiHgDpkm2m8jJ4ImPT772U5bhhYNG8aBQDym ketszu@archlinux","recorded":"2025-09-26 11:32:53.592493332","filePath":"null","pinned":false},{"value":"TelU-Connect.8021x","recorded":"2025-09-26 11:11:33.678020235","filePath":"null","pinned":false},{"value":"EAP-PEAP-ServerDomainMask=","recorded":"2025-09-26 11:06:49.154747320","filePath":"null","pinned":false},{"value":"EAP negotiation stopped after the Identity exchange, this can happen when the EAP-Identity value is not what the authenticator expects","recorded":"2025-09-26 10:57:52.251649268","filePath":"null","pinned":false},{"value":"sedih","recorded":"2025-09-26 02:08:29.755399587","filePath":"null","pinned":false},{"value":"main a","recorded":"2025-09-26 01:50:08.975548204","filePath":"null","pinned":false},{"value":"lagi a","recorded":"2025-09-26 01:48:45.871208176","filePath":"null","pinned":false},{"value":"bikin ","recorded":"2025-09-26 01:48:38.717431885","filePath":"null","pinned":false},{"value":"i w","recorded":"2025-09-26 01:35:47.331429862","filePath":"null","pinned":false},{"value":"more","recorded":"2025-09-26 01:35:42.131243488","filePath":"null","pinned":false},{"value":"cowo lu knp si","recorded":"2025-09-26 01:35:23.219407293","filePath":"null","pinned":false},{"value":"i haven","recorded":"2025-09-26 01:15:02.583629557","filePath":"null","pinned":false},{"value":"i want order","recorded":"2025-09-26 00:58:09.926343927","filePath":"null","pinned":false},{"value":"oder ","recorded":"2025-09-26 00:58:02.661959850","filePath":"null","pinned":false},{"value":"why ","recorded":"2025-09-26 00:56:59.821451256","filePath":"null","pinned":false},{"value":"didnt ask","recorded":"2025-09-26 00:56:57.091139959","filePath":"null","pinned":false},{"value":"what makes you think ","recorded":"2025-09-26 00:52:55.909489841","filePath":"null","pinned":false},{"value":"why did","recorded":"2025-09-26 00:51:37.215578727","filePath":"null","pinned":false},{"value":"tell me more abt it","recorded":"2025-09-26 00:51:28.608488149","filePath":"null","pinned":false},{"value":"what r u up","recorded":"2025-09-26 00:45:24.754714466","filePath":"null","pinned":false},{"value":"how come he didnt know abt secret drinks","recorded":"2025-09-26 00:38:19.118060850","filePath":"null","pinned":false},{"value":"well done kind sire","recorded":"2025-09-26 00:33:44.541207402","filePath":"null","pinned":false},{"value":"bye wdrc","recorded":"2025-09-26 00:33:10.065616279","filePath":"null","pinned":false},{"value":"stop crack","recorded":"2025-09-26 00:24:24.443916912","filePath":"null","pinned":false},{"value":"are we teaming up against her","recorded":"2025-09-26 00:22:40.018535129","filePath":"null","pinned":false},{"value":"what happen","recorded":"2025-09-26 00:17:22.056273609","filePath":"null","pinned":false},{"value":"at ","recorded":"2025-09-26 00:16:31.310967677","filePath":"null","pinned":false},{"value":"wdc","recorded":"2025-09-26 00:12:03.797783331","filePath":"null","pinned":false},{"value":"take it easy girl","recorded":"2025-09-26 00:02:56.869955418","filePath":"null","pinned":false},{"value":"ur welcome girl","recorded":"2025-09-26 00:02:46.615907589","filePath":"null","pinned":false},{"value":"im ","recorded":"2025-09-26 00:01:01.809106885","filePath":"null","pinned":false},{"value":"yeah there's also ","recorded":"2025-09-26 00:00:29.368975555","filePath":"null","pinned":false},{"value":"do staff allowed to reply using vc","recorded":"2025-09-25 23:57:28.772890962","filePath":"null","pinned":false},{"value":"no what im asking was","recorded":"2025-09-25 23:56:20.422399387","filePath":"null","pinned":false},{"value":"1493489673","recorded":"2025-09-25 23:54:15.540437313","filePath":"null","pinned":false},{"value":"25 R$ Tip","recorded":"2025-09-25 23:47:13.242245125","filePath":"null","pinned":false},{"value":"15 R$ Tip","recorded":"2025-09-25 23:47:02.113786132","filePath":"null","pinned":false},{"value":"50 R$ Tip","recorded":"2025-09-25 23:46:47.197697607","filePath":"null","pinned":false},{"value":"alr","recorded":"2025-09-25 23:46:38.127762684","filePath":"null","pinned":false},{"value":"100 R$ Tip","recorded":"2025-09-25 23:46:13.328446152","filePath":"null","pinned":false},{"value":"1000 R$ Tip","recorded":"2025-09-25 23:45:46.636211797","filePath":"null","pinned":false},{"value":"anything","recorded":"2025-09-25 23:45:20.589948548","filePath":"null","pinned":false},{"value":"5 R$ Tip","recorded":"2025-09-25 23:42:27.684962270","filePath":"null","pinned":false},{"value":"u shd kick ","recorded":"2025-09-25 23:39:38.683647688","filePath":"null","pinned":false},{"value":"can ","recorded":"2025-09-25 23:30:15.061335830","filePath":"null","pinned":false},{"value":"troll","recorded":"2025-09-25 23:29:14.569131330","filePath":"null","pinned":false},{"value":"shut up","recorded":"2025-09-25 23:29:03.845329096","filePath":"null","pinned":false},{"value":"20104057 Registrasi _ Telkom University","recorded":"2025-09-25 20:44:20.062650042","filePath":"null","pinned":false},{"value":"https://pddikti.kemdiktisaintek.go.id/search/20104057?","recorded":"2025-09-25 19:52:03.682434123","filePath":"null","pinned":false},{"value":"Kesulita","recorded":"2025-09-25 19:32:53.589732214","filePath":"null","pinned":false},{"value":"pake ","recorded":"2025-09-25 19:05:48.813423650","filePath":"null","pinned":false},{"value":"buat besok","recorded":"2025-09-25 19:00:32.443953064","filePath":"null","pinned":false},{"value":"biasanya kan gw terimanya yang udah discan","recorded":"2025-09-25 18:57:31.145567912","filePath":"null","pinned":false},{"value":"kan","recorded":"2025-09-25 18:57:26.879003855","filePath":"null","pinned":false},{"value":"baa.telkomuniversity.ac.id ","recorded":"2025-09-25 17:59:23.316039662","filePath":"null","pinned":false},{"value":"why am i always regret","recorded":"2025-09-25 17:24:06.705716383","filePath":"null","pinned":false},{"value":"0851-3596-1481","recorded":"2025-09-25 17:19:10.302638691","filePath":"null","pinned":false},{"value":"https://situ-keu.telkomuniversity.ac.id/credit-payment/auth/login","recorded":"2025-09-25 15:53:00.238300115","filePath":"null","pinned":false},{"value":"can i have ","recorded":"2025-09-23 23:37:59.924538132","filePath":"null","pinned":false},{"value":"can i get  a refill","recorded":"2025-09-23 23:36:47.381265863","filePath":"null","pinned":false},{"value":"dadosaken","recorded":"2025-09-22 21:54:22.601905760","filePath":"null","pinned":false},{"value":"ingkang","recorded":"2025-09-22 21:54:17.817316759","filePath":"null","pinned":false},{"value":"ngrontokaken","recorded":"2025-09-22 21:52:58.022214729","filePath":"null","pinned":false},{"value":"100,000","recorded":"2025-09-20 20:22:29.064065518","filePath":"null","pinned":false},{"value":"아무리 고양이과 라도 이정돈 무리겠지","recorded":"2025-09-12 18:40:17.868575482","filePath":"null","pinned":false},{"value":"sudo nano /etc/X11/xorg.conf.d/40-libinput.conf","recorded":"2025-09-10 21:36:25.463690558","filePath":"null","pinned":false},{"value":"setup password for firefox profile","recorded":"2025-09-08 15:45:24.251587248","filePath":"null","pinned":false},{"value":"oh- hi... great performance by the way... as expected.","recorded":"2025-09-07 02:06:27.931162795","filePath":"null","pinned":false},{"value":"flatpak install flathub org.vinegarhq.Sober","recorded":"2025-09-04 20:09:27.176748708","filePath":"null","pinned":false},{"value":"flatpak run org.vinegarhq.Sober","recorded":"2025-09-04 20:08:37.239386680","filePath":"null","pinned":false},{"value":"Easy-Switch™ button","recorded":"2025-09-04 01:26:41.087925248","filePath":"null","pinned":false},{"value":" newItem := {}\n\t\t\tinsCmd := m.list.InsertItem(0, newItem)\n\t\t\tstatusCmd := m.list.NewStatusMessage(statusMessageStyle(\"Added \" + newItem.Title()))\n\t\t\treturn m, tea.Batch(insCmd, statusCmd)\n","recorded":"2025-09-04 00:51:43.415785866","filePath":"null","pinned":false},{"value":"newItem := []list.Item{\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Shutdown\",\n\t\t\t\t\t\tdescription: \"Turning off your machine\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Restart\",\n\t\t\t\t\t\tdescription: \"Reboot your system\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Sleep\",\n\t\t\t\t\t\tdescription: \"Put your system to sleep mode\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Hibernate\",\n\t\t\t\t\t\tdescription: \"Put your system to hibernation mode\",\n\t\t\t},\n\t\t\t}\n\t\t\t\n\n\t\t\tinsCmd := m.list.InsertItem(0, newItem)\n\t\t\tstatusCmd := m.list.NewStatusMessage(statusMessageStyle(\"Added \" + newItem.Title()))\n\t\t\treturn m, tea.Batch(insCmd, statusCmd)\n\t\t}\n","recorded":"2025-09-04 00:49:31.500967501","filePath":"null","pinned":false},{"value":"items := []item{\n\t\t{title: \"Shutdown\", description: \"Turning off your machine\"},\n\t\t{title: \"Restart\", description: \"Reboot your system\"},\n\t\t{title: \"Sleep\", description: \"Put your system to sleep mode\"},\n\t\t{title: \"Hibernate\", description: \"Put your system to hibernation mode\"},\n\t}\n\tvar insCmds []tea.Cmd\n\tfor _, it := range items {\n\t\tinsCmds = append(insCmds, m.list.InsertItem(0, it))\n\t}\n\tstatusCmd := m.list.NewStatusMessage(statusMessageStyle(\"Added items\"))\n\treturn m, tea.Batch(append(insCmds, statusCmd)...)\n","recorded":"2025-09-04 00:49:04.003427617","filePath":"null","pinned":false},{"value":"func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tvar cmds []tea.Cmd\n\n\tswitch msg := msg.(type) {\n\tcase tea.WindowSizeMsg:\n\t\th, v := appStyle.GetFrameSize()\n\t\tm.list.SetSize(msg.Width-h, msg.Height-v)\n\n\tcase tea.KeyMsg:\n\t\t// Don't match any of the keys below if we're actively filtering.\n\t\tif m.list.FilterState() == list.Filtering {\n\t\t\tbreak\n\t\t}\n\n\t\tswitch {\n\t\tcase key.Matches(msg, m.keys.toggleSpinner):\n\t\t\tcmd := m.list.ToggleSpinner()\n\t\t\treturn m, cmd\n\n\t\tcase key.Matches(msg, m.keys.toggleTitleBar):\n\t\t\tv := !m.list.ShowTitle()\n\t\t\tm.list.SetShowTitle(v)\n\t\t\tm.list.SetShowFilter(v)\n\t\t\tm.list.SetFilteringEnabled(v)\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.toggleStatusBar):\n\t\t\tm.list.SetShowStatusBar(!m.list.ShowStatusBar())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.togglePagination):\n\t\t\tm.list.SetShowPagination(!m.list.ShowPagination())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.toggleHelpMenu):\n\t\t\tm.list.SetShowHelp(!m.list.ShowHelp())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.insertItem):\n\t\t\tm.delegateKeys.remove.SetEnabled(true)\n\t\t\t newItem := []list.Item{\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Shutdown\",\n\t\t\t\t\t\tdescription: \"Turning off your machine\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Restart\",\n\t\t\t\t\t\tdescription: \"Reboot your system\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Sleep\",\n\t\t\t\t\t\tdescription: \"Put your system to sleep mode\",\n\t\t\t},\n\t\t\titem{\n\t\t\t\t\t\ttitle: \"Hibernate\",\n\t\t\t\t\t\tdescription: \"Put your system to hibernation mode\",\n\t\t\t},\n\t\t\t}\n\t\t\t\n\n\t\t\tinsCmd := m.list.InsertItem(0, newItem)\n\t\t\tstatusCmd := m.list.NewStatusMessage(statusMessageStyle(\"Added \" + newItem.Title()))\n\t\t\treturn m, tea.Batch(insCmd, statusCmd)\n\t\t}\n\t}\n\n\t// This will also call our delegate's update function.\n\tnewListModel, cmd := m.list.Update(msg)\n\tm.list = newListModel\n\tcmds = append(cmds, cmd)\n\n\treturn m, tea.Batch(cmds...)\n}","recorded":"2025-09-04 00:46:48.318310129","filePath":"null","pinned":false},{"value":"item{\n\t\t\t\t\t\ttitle: \"Sleep\",\n\t\t\t\t\t\tdescription: \"Put your system to sleep mode\",\n\t\t\t}","recorded":"2025-09-04 00:35:49.697482510","filePath":"null","pinned":false},{"value":"string,","recorded":"2025-09-04 00:35:28.059093541","filePath":"null","pinned":false},{"value":"item{\n\t\t\t\ttitle: \"Shutdown\",\n\t\t\t\tdescription: \"Turning off your machine\"\n\t\t\t},","recorded":"2025-09-04 00:32:35.431150896","filePath":"null","pinned":false},{"value":"package main\n\nimport (\n\t\"github.com/charmbracelet/bubbles/key\"\n\t\"github.com/charmbracelet/bubbles/list\"\n\ttea \"github.com/charmbracelet/bubbletea\"\n)\n\nfunc newItemDelegate(keys *delegateKeyMap) list.DefaultDelegate {\n\td := list.NewDefaultDelegate()\n\n\td.UpdateFunc = func(msg tea.Msg, m *list.Model) tea.Cmd {\n\t\tvar title string\n\n\t\tif i, ok := m.SelectedItem().(item); ok {\n\t\t\ttitle = i.Title()\n\t\t} else {\n\t\t\treturn nil\n\t\t}\n\n\t\tswitch msg := msg.(type) {\n\t\tcase tea.KeyMsg:\n\t\t\tswitch {\n\t\t\tcase key.Matches(msg, keys.choose):\n\t\t\t\treturn m.NewStatusMessage(statusMessageStyle(\"You chose \" + title))\n\n\t\t\tcase key.Matches(msg, keys.remove):\n\t\t\t\tindex := m.Index()\n\t\t\t\tm.RemoveItem(index)\n\t\t\t\tif len(m.Items()) == 0 {\n\t\t\t\t\tkeys.remove.SetEnabled(false)\n\t\t\t\t}\n\t\t\t\treturn m.NewStatusMessage(statusMessageStyle(\"Deleted \" + title))\n\t\t\t}\n\t\t}\n\n\t\treturn nil\n\t}\n\n\thelp := []key.Binding{keys.choose, keys.remove}\n\n\td.ShortHelpFunc = func() []key.Binding {\n\t\treturn help\n\t}\n\n\td.FullHelpFunc = func() [][]key.Binding {\n\t\treturn [][]key.Binding{help}\n\t}\n\n\treturn d\n}\n\ntype delegateKeyMap struct {\n\tchoose key.Binding\n\tremove key.Binding\n}\n\n// Additional short help entries. This satisfies the help.KeyMap interface and\n// is entirely optional.\nfunc (d delegateKeyMap) ShortHelp() []key.Binding {\n\treturn []key.Binding{\n\t\td.choose,\n\t\td.remove,\n\t}\n}\n\n// Additional full help entries. This satisfies the help.KeyMap interface and\n// is entirely optional.\nfunc (d delegateKeyMap) FullHelp() [][]key.Binding {\n\treturn [][]key.Binding{\n\t\t{\n\t\t\td.choose,\n\t\t\td.remove,\n\t\t},\n\t}\n}\n\nfunc newDelegateKeyMap() *delegateKeyMap {\n\treturn \u0026delegateKeyMap{\n\t\tchoose: key.NewBinding(\n\t\t\tkey.WithKeys(\"enter\"),\n\t\t\tkey.WithHelp(\"enter\", \"choose\"),\n\t\t),\n\t\tremove: key.NewBinding(\n\t\t\tkey.WithKeys(\"x\", \"backspace\"),\n\t\t\tkey.WithHelp(\"x\", \"delete\"),\n\t\t),\n\t}\n}","recorded":"2025-09-04 00:27:15.435133852","filePath":"null","pinned":false},{"value":"package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/charmbracelet/bubbles/list\"\n\ttea \"github.com/charmbracelet/bubbletea\"\n\t\"github.com/charmbracelet/lipgloss\"\n)\n\nvar docStyle = lipgloss.NewStyle().Margin(1, 2)\n\ntype item struct {\n\ttitle, desc string\n}\n\nfunc (i item) Title() string       { return i.title }\nfunc (i item) Description() string { return i.desc }\nfunc (i item) FilterValue() string { return i.title }\n\ntype model struct {\n\tlist list.Model\n}\n\nfunc (m model) Init() tea.Cmd {\n\treturn nil\n}\n\nfunc (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tswitch msg := msg.(type) {\n\tcase tea.KeyMsg:\n\t\tif msg.String() == \"ctrl+c\" {\n\t\t\treturn m, tea.Quit\n\t\t}\n\tcase tea.WindowSizeMsg:\n\t\th, v := docStyle.GetFrameSize()\n\t\tm.list.SetSize(msg.Width-h, msg.Height-v)\n\t}\n\n\tvar cmd tea.Cmd\n\tm.list, cmd = m.list.Update(msg)\n\treturn m, cmd\n}\n\nfunc (m model) View() string {\n\treturn docStyle.Render(m.list.View())\n}\n\nfunc main() {\n\titems := []list.Item{\n\t\titem{title: \"Raspberry Pi’s\", desc: \"I have ’em all over my house\"},\n\t\titem{title: \"Nutella\", desc: \"It's good on toast\"},\n\t\titem{title: \"Bitter melon\", desc: \"It cools you down\"},\n\t\titem{title: \"Nice socks\", desc: \"And by that I mean socks without holes\"},\n\t\titem{title: \"Eight hours of sleep\", desc: \"I had this once\"},\n\t\titem{title: \"Cats\", desc: \"Usually\"},\n\t\titem{title: \"Plantasia, the album\", desc: \"My plants love it too\"},\n\t\titem{title: \"Pour over coffee\", desc: \"It takes forever to make though\"},\n\t\titem{title: \"VR\", desc: \"Virtual reality...what is there to say?\"},\n\t\titem{title: \"Noguchi Lamps\", desc: \"Such pleasing organic forms\"},\n\t\titem{title: \"Linux\", desc: \"Pretty much the best OS\"},\n\t\titem{title: \"Business school\", desc: \"Just kidding\"},\n\t\titem{title: \"Pottery\", desc: \"Wet clay is a great feeling\"},\n\t\titem{title: \"Shampoo\", desc: \"Nothing like clean hair\"},\n\t\titem{title: \"Table tennis\", desc: \"It’s surprisingly exhausting\"},\n\t\titem{title: \"Milk crates\", desc: \"Great for packing in your extra stuff\"},\n\t\titem{title: \"Afternoon tea\", desc: \"Especially the tea sandwich part\"},\n\t\titem{title: \"Stickers\", desc: \"The thicker the vinyl the better\"},\n\t\titem{title: \"20° Weather\", desc: \"Celsius, not Fahrenheit\"},\n\t\titem{title: \"Warm light\", desc: \"Like around 2700 Kelvin\"},\n\t\titem{title: \"The vernal equinox\", desc: \"The autumnal equinox is pretty good too\"},\n\t\titem{title: \"Gaffer’s tape\", desc: \"Basically sticky fabric\"},\n\t\titem{title: \"Terrycloth\", desc: \"In other words, towel fabric\"},\n\t}\n\n\tm := model{list: list.New(items, list.NewDefaultDelegate(), 0, 0)}\n\tm.list.Title = \"My Fave Things\"\n\n\tp := tea.NewProgram(m, tea.WithAltScreen())\n\n\tif _, err := p.Run(); err != nil {\n\t\tfmt.Println(\"Error running program:\", err)\n\t\tos.Exit(1)\n\t}\n}","recorded":"2025-09-04 00:24:49.137371323","filePath":"null","pinned":false},{"value":"package main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/charmbracelet/bubbles/key\"\n\t\"github.com/charmbracelet/bubbles/list\"\n\ttea \"github.com/charmbracelet/bubbletea\"\n\t\"github.com/charmbracelet/lipgloss\"\n)\n\nvar (\n\tappStyle = lipgloss.NewStyle().Padding(1, 2)\n\n\ttitleStyle = lipgloss.NewStyle().\n\t\t\tForeground(lipgloss.Color(\"#FFFDF5\")).\n\t\t\tBackground(lipgloss.Color(\"#25A065\")).\n\t\t\tPadding(0, 1)\n\n\tstatusMessageStyle = lipgloss.NewStyle().\n\t\t\t\tForeground(lipgloss.AdaptiveColor{Light: \"#04B575\", Dark: \"#04B575\"}).\n\t\t\t\tRender\n)\n\ntype item struct {\n\ttitle       string\n\tdescription string\n}\n\nfunc (i item) Title() string       { return i.title }\nfunc (i item) Description() string { return i.description }\nfunc (i item) FilterValue() string { return i.title }\n\ntype listKeyMap struct {\n\ttoggleSpinner    key.Binding\n\ttoggleTitleBar   key.Binding\n\ttoggleStatusBar  key.Binding\n\ttogglePagination key.Binding\n\ttoggleHelpMenu   key.Binding\n\tinsertItem       key.Binding\n}\n\nfunc newListKeyMap() *listKeyMap {\n\treturn \u0026listKeyMap{\n\t\tinsertItem: key.NewBinding(\n\t\t\tkey.WithKeys(\"a\"),\n\t\t\tkey.WithHelp(\"a\", \"add item\"),\n\t\t),\n\t\ttoggleSpinner: key.NewBinding(\n\t\t\tkey.WithKeys(\"s\"),\n\t\t\tkey.WithHelp(\"s\", \"toggle spinner\"),\n\t\t),\n\t\ttoggleTitleBar: key.NewBinding(\n\t\t\tkey.WithKeys(\"T\"),\n\t\t\tkey.WithHelp(\"T\", \"toggle title\"),\n\t\t),\n\t\ttoggleStatusBar: key.NewBinding(\n\t\t\tkey.WithKeys(\"S\"),\n\t\t\tkey.WithHelp(\"S\", \"toggle status\"),\n\t\t),\n\t\ttogglePagination: key.NewBinding(\n\t\t\tkey.WithKeys(\"P\"),\n\t\t\tkey.WithHelp(\"P\", \"toggle pagination\"),\n\t\t),\n\t\ttoggleHelpMenu: key.NewBinding(\n\t\t\tkey.WithKeys(\"H\"),\n\t\t\tkey.WithHelp(\"H\", \"toggle help\"),\n\t\t),\n\t}\n}\n\ntype model struct {\n\tlist          list.Model\n\titemGenerator *randomItemGenerator\n\tkeys          *listKeyMap\n\tdelegateKeys  *delegateKeyMap\n}\n\nfunc newModel() model {\n\tvar (\n\t\titemGenerator randomItemGenerator\n\t\tdelegateKeys  = newDelegateKeyMap()\n\t\tlistKeys      = newListKeyMap()\n\t)\n\n\t// Make initial list of items\n\tconst numItems = 24\n\titems := make([]list.Item, numItems)\n\tfor i := 0; i \u003c numItems; i++ {\n\t\titems[i] = itemGenerator.next()\n\t}\n\n\t// Setup list\n\tdelegate := newItemDelegate(delegateKeys)\n\tgroceryList := list.New(items, delegate, 0, 0)\n\tgroceryList.Title = \"Groceries\"\n\tgroceryList.Styles.Title = titleStyle\n\tgroceryList.AdditionalFullHelpKeys = func() []key.Binding {\n\t\treturn []key.Binding{\n\t\t\tlistKeys.toggleSpinner,\n\t\t\tlistKeys.insertItem,\n\t\t\tlistKeys.toggleTitleBar,\n\t\t\tlistKeys.toggleStatusBar,\n\t\t\tlistKeys.togglePagination,\n\t\t\tlistKeys.toggleHelpMenu,\n\t\t}\n\t}\n\n\treturn model{\n\t\tlist:          groceryList,\n\t\tkeys:          listKeys,\n\t\tdelegateKeys:  delegateKeys,\n\t\titemGenerator: \u0026itemGenerator,\n\t}\n}\n\nfunc (m model) Init() tea.Cmd {\n\treturn nil\n}\n\nfunc (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n\tvar cmds []tea.Cmd\n\n\tswitch msg := msg.(type) {\n\tcase tea.WindowSizeMsg:\n\t\th, v := appStyle.GetFrameSize()\n\t\tm.list.SetSize(msg.Width-h, msg.Height-v)\n\n\tcase tea.KeyMsg:\n\t\t// Don't match any of the keys below if we're actively filtering.\n\t\tif m.list.FilterState() == list.Filtering {\n\t\t\tbreak\n\t\t}\n\n\t\tswitch {\n\t\tcase key.Matches(msg, m.keys.toggleSpinner):\n\t\t\tcmd := m.list.ToggleSpinner()\n\t\t\treturn m, cmd\n\n\t\tcase key.Matches(msg, m.keys.toggleTitleBar):\n\t\t\tv := !m.list.ShowTitle()\n\t\t\tm.list.SetShowTitle(v)\n\t\t\tm.list.SetShowFilter(v)\n\t\t\tm.list.SetFilteringEnabled(v)\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.toggleStatusBar):\n\t\t\tm.list.SetShowStatusBar(!m.list.ShowStatusBar())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.togglePagination):\n\t\t\tm.list.SetShowPagination(!m.list.ShowPagination())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.toggleHelpMenu):\n\t\t\tm.list.SetShowHelp(!m.list.ShowHelp())\n\t\t\treturn m, nil\n\n\t\tcase key.Matches(msg, m.keys.insertItem):\n\t\t\tm.delegateKeys.remove.SetEnabled(true)\n\t\t\tnewItem := m.itemGenerator.next()\n\t\t\tinsCmd := m.list.InsertItem(0, newItem)\n\t\t\tstatusCmd := m.list.NewStatusMessage(statusMessageStyle(\"Added \" + newItem.Title()))\n\t\t\treturn m, tea.Batch(insCmd, statusCmd)\n\t\t}\n\t}\n\n\t// This will also call our delegate's update function.\n\tnewListModel, cmd := m.list.Update(msg)\n\tm.list = newListModel\n\tcmds = append(cmds, cmd)\n\n\treturn m, tea.Batch(cmds...)\n}\n\nfunc (m model) View() string {\n\treturn appStyle.Render(m.list.View())\n}\n\nfunc main() {\n\trand.Seed(time.Now().UTC().UnixNano())\n\n\tif _, err := tea.NewProgram(newModel(), tea.WithAltScreen()).Run(); err != nil {\n\t\tfmt.Println(\"Error running program:\", err)\n\t\tos.Exit(1)\n\t}\n}","recorded":"2025-09-04 00:24:17.092711336","filePath":"null","pinned":false},{"value":"github.com/charmbracelet/bubbles/key","recorded":"2025-09-04 00:23:19.589434045","filePath":"null","pinned":false},{"value":"\"github.com/charmbracelet/bubbletea\"","recorded":"2025-09-04 00:17:40.174387144","filePath":"null","pinned":false},{"value":"ketszu@proton.me","recorded":"2025-09-03 22:30:05.582494486","filePath":"null","pinned":false},{"value":"漫画","recorded":"2025-09-03 20:52:44.435845426","filePath":"null","pinned":false},{"value":"how to do you read manga to learn ","recorded":"2025-09-03 20:50:59.565937580","filePath":"null","pinned":false},{"value":"6282319949941","recorded":"2025-09-03 17:54:37.507433879","filePath":"null","pinned":false},{"value":"\n130646\n","recorded":"2025-09-03 17:47:17.497857363","filePath":"null","pinned":false},{"value":"'Attachment_GREGORIUS DAMAR PRAKOSO _Y121177454.pdf'","recorded":"2025-09-03 14:33:17.927342235","filePath":"null","pinned":false},{"value":"Welcome to Evergreen! What would you like to order?","recorded":"2025-09-03 02:45:29.079440746","filePath":"null","pinned":false},{"value":"Welcome to Evergreen! What can I get you started for today?","recorded":"2025-09-03 02:45:15.507260664","filePath":"null","pinned":true},{"value":"func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\n    switch msg := msg.(type) {\n\n    // Is it a key press?\n    case tea.KeyMsg:\n\n        // Cool, what was the actual key pressed?\n        switch msg.String() {\n\n        // These keys should exit the program.\n        case \"ctrl+c\", \"q\":\n            return m, tea.Quit\n\n        // The \"up\" and \"k\" keys move the cursor up\n        case \"up\", \"k\":\n            if m.cursor \u003e 0 {\n                m.cursor--\n            }\n\n        // The \"down\" and \"j\" keys move the cursor down\n        case \"down\", \"j\":\n            if m.cursor \u003c len(m.choices)-1 {\n                m.cursor++\n            }\n\n        // The \"enter\" key and the spacebar (a literal space) toggle\n        // the selected state for the item that the cursor is pointing at.\n        case \"enter\", \" \":\n            _, ok := m.selected[m.cursor]\n            if ok {\n                delete(m.selected, m.cursor)\n            } else {\n                m.selected[m.cursor] = struct{}{}\n            }\n        }\n    }\n\n ","recorded":"2025-09-02 16:51:56.768280460","filePath":"null","pinned":false},{"value":"malam min, saya mau tanya. saya punya akun mybca yang sudah login di pernagkat lama. ketika saya coba untuk coba masuk ke mybca di perangkat baru dan mulai verifikasi wajah, muncul pesan please turn off developer mode. sedangkan developer mode di perangkat tersebut. boleh tolong dibantu ya min","recorded":"2025-08-31 19:22:15.895420756","filePath":"null","pinned":false},{"value":"Date: 2025-08-31 WIB\n[18:21:57.255] weston 14.0.2\n               https://wayland.freedesktop.org\n               Bug reports to: https://gitlab.freedesktop.org/wayland/weston/issues/\n               Build: 14.0.2\n[18:21:57.255] Command line: weston --socket=wayland-1\n[18:21:57.255] OS: Linux, 6.16.3-arch1-1, #1 SMP PREEMPT_DYNAMIC Sat, 23 Aug 2025 15:32:49 +0000, x86_64\n[18:21:57.255] Flight recorder: enabled\n[18:21:57.255] Starting with no config file.\n[18:21:57.255] Output repaint window is 7 ms maximum.\n[18:21:57.255] Loading module '/usr/lib/libweston-14/wayland-backend.so'\n[18:21:57.264] Error: Failed to connect to parent Wayland compositor: No such file or directory\n               display option: (none), WAYLAND_DISPLAY=cage\n[18:21:57.264] fatal: failed to create compositor backend","recorded":"2025-08-31 18:22:28.087322505","filePath":"null","pinned":false},{"value":".local/bin/clipse-copy.sh","recorded":"2025-08-31 03:20:39.441165086","filePath":"null","pinned":false}]}